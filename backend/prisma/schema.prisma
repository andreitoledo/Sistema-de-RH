generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
}

model Employee {
  id          Int      @id @default(autoincrement())
  name        String
  position    String
  department  String
  salary      Float
  phone       String
  email       String   @unique
  birthday    DateTime
  hiredAt     DateTime
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())

  vacations   Vacation[] 
  evaluations Evaluation[]
}

model Vacation {
  id           Int      @id @default(autoincrement())
  employeeId   Int
  employee     Employee @relation(fields: [employeeId], references: [id])
  startDate    DateTime
  endDate      DateTime
  status       String   @default("pending") // pending | approved | rejected
  createdAt    DateTime @default(now())
}

model Evaluation {
  id           Int       @id @default(autoincrement())
  employeeId   Int
  employee     Employee  @relation(fields: [employeeId], references: [id])
  evaluationDate DateTime
  score        Int
  comments     String
  createdAt    DateTime  @default(now())
}

model Job {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  department  String
  location    String
  status      String       @default("open") // open | closed
  createdAt   DateTime     @default(now())
  applications Application[]
}

model Application {
  id          Int      @id @default(autoincrement())
  jobId       Int
  job         Job      @relation(fields: [jobId], references: [id])
  candidateName String
  candidateEmail String
  resumeLink   String
  createdAt    DateTime @default(now())
}




